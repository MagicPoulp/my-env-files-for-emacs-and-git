#!/bin/bash

# ------------------------------------------------------------
# environment variables

# source of the trick to set up the bash history
#https://stackoverflow.com/questions/9457233/unlimited-bash-history
# increase shell history
export HISTSIZE=5000000
export HISTFILESIZE=5000000
#add time stamp
export HISTTIMEFORMAT="[%F %T] "
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
export HISTFILE=~/.bash_eternal_history
# Force prompt to write history after every command.
# http://superuser.com/questions/20900/bash-history-loss
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

export PATH=$PATH:$HOME/bin:/sbin:/usr/sbin

# for using npm binaries
export PATH="$PATH:./node_modules/.bin"

export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

# ------------------------------------------------------------
# aliases

alias findgrep='find . | xargs grep -i -n -s'

# emacs
# shortcut to start emacs while using the emacs server.
# It can open the file at a certain a line number by using the command following syntax:
# e test/unit_tests/components/images_tests.js:101:56
# however, using "emacs" without the shortcut will make the emacs sessions have separate buffers
alias e='e_function'
# firefox
alias f='f_function'

alias search='find . -name 2>/dev/null'
alias c='clear'
alias ll='ls -l'
alias l='ls'

alias gs='git status'
alias gb='git branch'
alias ga='git add'
alias gr='git rm'
alias gaa='git add */*'
alias gcak='git commit --amend'
alias gcakn='git commit --amend --no-edit'
alias gca='git commit --amend --date="$(date -R)"'
alias gcan='git commit --amend --no-edit --date="$(date -R)"'
alias gco='git commit'
alias gch='git checkout'
alias gpush='git push -u'
alias gpull='git pull --prune'
alias jp='jenkins push'
alias jd='jenkins del'
alias gd='git diff --stat origin/master...'
alias bf='git branch -a | grep'
alias bp='git format-patch master --stdout'

# To remove hanging git commits that are under no branch
# source:
# https://stackoverflow.com/questions/3765234/listing-and-deleting-git-commits-that-are-under-no-branch-dangling
alias greflog='git reflog expire --expire-unreachable=now --all && git gc --prune=now'

alias grep="grep --color=always"

# other useful patch commands:
# git apply --stat fix_empty_poster.patch
# git apply --check fix_empty_poster.patch
# git am --signoff < fix_empty_poster.patch

alias gcom='gcom_function'
function clean() {
    dir=`pwd`
    cd $d
    search *~ | xargs rm 2>/dev/null
    search *#* | xargs rm 2>/dev/null
    cd $dir
}

function gcom_function {
    eval "git commit -m \"$@\""
}

function e_function {
    eval "emacs_client $@ &"
}

function f_function {
    eval "firefox \"$@\" &"
}

# for deactivating the insert key
xmodmap -e 'keycode 118='

# for Vulkan

#currentDirectory=$PWD
#VULKAN_SDK_VERSION1="1.0.30.0"
#cd ~/documents/VulkanSDK/$VULKAN_SDK_VERSION1
#source setup-env.sh
#cd $currentDirectory
